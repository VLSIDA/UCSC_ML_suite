name: Push Workflow

on:
  push:

jobs:
  find-designs:
    runs-on: ubuntu-latest
    outputs:
      designs: ${{ steps.set-matrix.outputs.designs }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Find design configurations
        id: set-matrix
        run: |
          configs=$(find designs/nangate45 designs/asap7 designs/sky130hd -name config.mk | sort | jq -R -s -c 'split("\n")[:-1]')
          echo "designs=$configs" >> "$GITHUB_OUTPUT"
          echo "Found designs: $configs"

  build:
    needs: find-designs
    runs-on: ubuntu-latest
    strategy:
      matrix:
        design: ${{ fromJson(needs.find-designs.outputs.designs) }}
      fail-fast: false
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run setup script
        run: ./setup.sh

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Determine ORFS tag
        id: get_tag
        run: |
          cd OpenROAD-flow-scripts
          tag=$(git describe --tags --abbrev=8 2>/dev/null || echo "latest")
          echo "tag=$tag" >> "$GITHUB_OUTPUT"

      - name: Run ORFS for design
        run: |
            tag="${{ steps.get_tag.outputs.tag }}"
            design="${{ matrix.design }}"
            echo "Running design: $design"
            
            docker run --rm \
            -v ${{ github.workspace }}/OpenROAD-flow-scripts/flow:/OpenROAD-flow-scripts/flow \
            -v ${{ github.workspace }}:/OpenROAD-flow-scripts/UCSC_ML_suite \
            -w /OpenROAD-flow-scripts \
            openroad/orfs:$tag \
            bash -c "
                set -e
                git config --global --add safe.directory '*'
                cd UCSC_ML_suite
                echo 'Running design: $design'
                make DESIGN_CONFIG='$design'
            "

      - name: Sanitize design name for artifact
        id: sanitize
        run: |
          design="${{ matrix.design }}"
          # Replace forward slashes with dashes and remove config.mk
          sanitized=$(echo "$design" | sed 's|/|-|g' | sed 's|-config\.mk$||')
          echo "sanitized_name=$sanitized" >> "$GITHUB_OUTPUT"
          echo "Sanitized artifact name: $sanitized"

      - name: Upload design artifacts
        uses: actions/upload-artifact@v4
        with:
          name: design-results-${{ steps.sanitize.outputs.sanitized_name }}
          path: |
            logs/
            reports/
            results/
          retention-days: 90

      - name: Upload design image
        uses: actions/upload-artifact@v4
        with:
          name: design-image-${{ steps.sanitize.outputs.sanitized_name }}
          path: reports/**/final_all.webp
          retention-days: 90
        if: success() || failure()

  collect-results:
    needs: [find-designs, build]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: design-results-*
          merge-multiple: true

      - name: Extract and update results
        run: |
            echo "Extracting results from OpenROAD runs..."
            
            # Check if the script exists
            if [ ! -f "extract_results.py" ]; then
                echo "Error: extract_results.py not found"
                exit 1
            fi
            
            # Run the extraction script with GitHub context
            if python3 extract_results.py \
                --base-dir . \
                --output QOR.md \
                --github-repo "${{ github.repository }}" \
                --github-run-id "${{ github.run_id }}"; then
                echo "Results extraction completed successfully"
            else
                echo "Results extraction failed, but continuing with workflow"
                echo "This may happen if no designs completed or there were format issues"
            fi
            
            # Show a preview of the results
            echo "Generated results table preview:"
            if grep -A 10 "OpenROAD Flow Results" QOR.md; then
                echo "Results table successfully updated"
            else
                echo "No results table found in QOR.md"
            fi
            
            # Show summary statistics
            if [ -d "logs" ]; then
                total_reports=$(find logs -name "6_report.json" | wc -l)
                echo "Found $total_reports completed design runs"
            fi

      - name: Commit and push results
        run: |
            echo "Current ref: ${{ github.ref }}"
            echo "Branch: ${{ github.ref_name }}"
            
            if [ "${{ github.ref }}" = "refs/heads/main" ]; then
                echo "Running on main branch - will commit results"
                git config --local user.email "action@github.com"
                git config --local user.name "GitHub Action"
                
                # Check if there are any changes to commit
                if git diff --quiet; then
                    echo "No changes to commit"
                else
                    git add QOR.md
                    git commit -m "Update OpenROAD flow results [skip ci]" || echo "No changes to commit"
                    git push
                fi
            else
                echo "Skipping commit - not on main branch (current: ${{ github.ref }})"
            fi
